@using (Html.Bootstrap().Container().Begin())
{
    @Html.Bootstrap().Heading1("Inline Icon")
    using (Html.Bootstrap().Div().SetId("test-inline-icon").Begin())
    {
        <text>This is an inline @Html.Bootstrap().Icon(Icon.GiArrowUp) icon.</text>
    }
    
    <hr />

    @Html.Bootstrap().Heading1("Button Icon")
    using (Html.Bootstrap().Div().SetId("test-button-icon").Begin())
    {
        @Html.Bootstrap().Button("Icon Button").SetIcon(Icon.GiBell)
    }

    <hr />

    @Html.Bootstrap().Heading1("Link Button Icon")
    using (Html.Bootstrap().Div().SetId("test-link-button-icon").Begin())
    {
        @Html.Bootstrap().LinkButton("Link Button").SetIcon(Icon.GiPicture)
    }

    <hr />

    @Html.Bootstrap().Heading1("Link Icon")
    using (Html.Bootstrap().Div().SetId("test-link-icon").Begin())
    {
        @Html.Bootstrap().Link("Link").SetIcon(Icon.GiRoad)
    }

    <hr />

    @Html.Bootstrap().Heading1("Form Feedback")
    using (Html.Bootstrap().Div().SetId("test-form-feedback").Begin())
    {
        using (var form = Html.Bootstrap().Form().Begin())
        {
            @form.Input("Normal", "Normal").SetFeedback(Icon.GiOkCircle)
            @form.Input("Error", "Error").SetState(ValidationState.Error).SetFeedback(Icon.GiRemoveCircle)
            @form.Input("SrOnly").SetState(ValidationState.Warning).SetFeedback(Icon.GiCheck).SetControlLabel("SrOnly Label", x => x.SetVisibility(Visibility.SrOnly))
        }
    }
}